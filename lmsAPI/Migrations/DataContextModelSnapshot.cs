// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lmsAPI.Data;

#nullable disable

namespace lmsAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("lmsAPI.admin", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("bytea");

                    b.Property<int?>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("email");

                    b.HasIndex("role_id");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("lmsAPI.job_titles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("jobtitle_decription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("jobtitle_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("job_titles");
                });

            modelBuilder.Entity("lmsAPI.roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("role_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role_platform")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("lmsAPI.user", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("jobtitle_id")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("progress")
                        .HasColumnType("double precision");

                    b.Property<int?>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("email");

                    b.HasIndex("jobtitle_id");

                    b.HasIndex("role_id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("lmsAPI.admin", b =>
                {
                    b.HasOne("lmsAPI.roles", "role_")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.Navigation("role_");
                });

            modelBuilder.Entity("lmsAPI.user", b =>
                {
                    b.HasOne("lmsAPI.job_titles", "jobtitle_")
                        .WithMany()
                        .HasForeignKey("jobtitle_id");

                    b.HasOne("lmsAPI.roles", "role_")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.Navigation("jobtitle_");

                    b.Navigation("role_");
                });
#pragma warning restore 612, 618
        }
    }
}
